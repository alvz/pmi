<?php

/**
 * This is the model base class for the table "icd10_en".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Icd10En".
 *
 * Columns in table "icd10_en" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $diagnosis_code
 * @property string $description
 * @property string $class_sub
 * @property string $type
 * @property string $inclusive
 * @property string $exclusive
 * @property string $notes
 * @property string $std_code
 * @property integer $sub_level
 * @property string $remarks
 * @property string $extra_codes
 * @property string $extra_subclass
 *
 */
abstract class BaseIcd10En extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'icd10_en';
	}

	public static function representingColumn() {
		return 'description';
	}

	public function rules() {
		return array(
			array('diagnosis_code, description, class_sub, type, inclusive, exclusive, notes, std_code, remarks, extra_codes, extra_subclass', 'required'),
			array('sub_level', 'numerical', 'integerOnly'=>true),
			array('diagnosis_code', 'length', 'max'=>12),
			array('class_sub', 'length', 'max'=>5),
			array('type', 'length', 'max'=>10),
			array('std_code', 'length', 'max'=>1),
			array('sub_level', 'default', 'setOnEmpty' => true, 'value' => null),
			array('diagnosis_code, description, class_sub, type, inclusive, exclusive, notes, std_code, sub_level, remarks, extra_codes, extra_subclass', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'diagnosis_code' => Yii::t('app', 'Diagnosis Code'),
			'description' => Yii::t('app', 'Description'),
			'class_sub' => Yii::t('app', 'Class Sub'),
			'type' => Yii::t('app', 'Type'),
			'inclusive' => Yii::t('app', 'Inclusive'),
			'exclusive' => Yii::t('app', 'Exclusive'),
			'notes' => Yii::t('app', 'Notes'),
			'std_code' => Yii::t('app', 'Std Code'),
			'sub_level' => Yii::t('app', 'Sub Level'),
			'remarks' => Yii::t('app', 'Remarks'),
			'extra_codes' => Yii::t('app', 'Extra Codes'),
			'extra_subclass' => Yii::t('app', 'Extra Subclass'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('diagnosis_code', $this->diagnosis_code, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('class_sub', $this->class_sub, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('inclusive', $this->inclusive, true);
		$criteria->compare('exclusive', $this->exclusive, true);
		$criteria->compare('notes', $this->notes, true);
		$criteria->compare('std_code', $this->std_code, true);
		$criteria->compare('sub_level', $this->sub_level);
		$criteria->compare('remarks', $this->remarks, true);
		$criteria->compare('extra_codes', $this->extra_codes, true);
		$criteria->compare('extra_subclass', $this->extra_subclass, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
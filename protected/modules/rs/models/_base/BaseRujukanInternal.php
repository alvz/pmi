<?php

/**
 * This is the model base class for the table "rujukan_internal".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RujukanInternal".
 *
 * Columns in table "rujukan_internal" available as properties of the model,
 * followed by relations of table "rujukan_internal" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idpasien
 * @property integer $idreg
 * @property integer $jenis_tanggungan
 * @property integer $poli_pengirim
 * @property integer $dokter_pengirim
 * @property integer $poli_tujuan
 * @property integer $dokter_tujuan
 * @property string $asuransi
 * @property string $no_rujuk
 * @property string $catatan_khusus
 *
 * @property Refpoli $poliPengirim0
 * @property Refpoli $poliTujuan0
 * @property Refdokter $dokterTujuan0
 * @property Mspasien2 $idpasien0
 * @property Datregister $idreg0
 * @property Reftanggungan $jenisTanggungan0
 * @property Refdokter $dokterPengirim0
 */
abstract class BaseRujukanInternal extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'rujukan_internal';
	}

	public static function representingColumn() {
		return 'no_rujuk';
	}

	public function rules() {
		return array(
			array('idpasien, idreg, jenis_tanggungan, dokter_pengirim, no_rujuk', 'required'),
			array('idpasien, idreg, jenis_tanggungan, poli_pengirim, dokter_pengirim, poli_tujuan, dokter_tujuan', 'numerical', 'integerOnly'=>true),
			array('asuransi, no_rujuk', 'length', 'max'=>45),
			array('catatan_khusus', 'safe'),
			array('poli_pengirim, poli_tujuan, dokter_tujuan, asuransi, catatan_khusus', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idpasien, idreg, jenis_tanggungan, poli_pengirim, dokter_pengirim, poli_tujuan, dokter_tujuan, asuransi, no_rujuk, catatan_khusus', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'poliPengirim0' => array(self::BELONGS_TO, 'Refpoli', 'poli_pengirim'),
			'poliTujuan0' => array(self::BELONGS_TO, 'Refpoli', 'poli_tujuan'),
			'dokterTujuan0' => array(self::BELONGS_TO, 'Refdokter', 'dokter_tujuan'),
			'idpasien0' => array(self::BELONGS_TO, 'Mspasien2', 'idpasien'),
			'idreg0' => array(self::BELONGS_TO, 'Datregister', 'idreg'),
			'jenisTanggungan0' => array(self::BELONGS_TO, 'Reftanggungan', 'jenis_tanggungan'),
			'dokterPengirim0' => array(self::BELONGS_TO, 'Refdokter', 'dokter_pengirim'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idpasien' => Yii::t('app', 'Idpasien'),
			'idreg' => Yii::t('app', 'Idreg'),
			'jenis_tanggungan' => Yii::t('app', 'Jenis Tanggungan'),
			'poli_pengirim' => Yii::t('app', 'Poli Pengirim'),
			'dokter_pengirim' => Yii::t('app', 'Dokter Pengirim'),
			'poli_tujuan' => Yii::t('app', 'Poli Tujuan'),
			'dokter_tujuan' => Yii::t('app', 'Dokter Tujuan'),
			'asuransi' => Yii::t('app', 'Asuransi'),
			'no_rujuk' => Yii::t('app', 'No Rujuk'),
			'catatan_khusus' => Yii::t('app', 'Catatan Khusus'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idpasien', $this->idpasien);
		$criteria->compare('idreg', $this->idreg);
		$criteria->compare('jenis_tanggungan', $this->jenis_tanggungan);
		$criteria->compare('poli_pengirim', $this->poli_pengirim);
		$criteria->compare('dokter_pengirim', $this->dokter_pengirim);
		$criteria->compare('poli_tujuan', $this->poli_tujuan);
		$criteria->compare('dokter_tujuan', $this->dokter_tujuan);
		$criteria->compare('asuransi', $this->asuransi, true);
		$criteria->compare('no_rujuk', $this->no_rujuk, true);
		$criteria->compare('catatan_khusus', $this->catatan_khusus, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
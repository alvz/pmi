<?php

/**
 * This is the model base class for the table "datregister".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Datregister".
 *
 * Columns in table "datregister" available as properties of the model,
 * followed by relations of table "datregister" available as properties of the model.
 *
 * @property integer $id
 * @property string $noreg
 * @property integer $idmr
 * @property string $tgl
 * @property string $jam_masuk
 * @property integer $jenis_tanggungan
 * @property string $no_rujuk
 * @property string $ref_rujuk
 * @property string $asuransi
 * @property integer $poli
 * @property string $nosjp
 * @property string $biaya_admin
 * @property integer $dokter
 * @property integer $type
 * @property string $tglplg
 * @property string $jamplg
 * @property integer $alasankeluar
 *
 * @property Reftanggungan $jenisTanggungan0
 * @property Mspasien2 $idmr0
 * @property Refpoli $poli0
 * @property Refdokter $dokter0
 * @property Reftype $type0
 * @property Refkeluar $alasankeluar0
 * @property Dattindakan[] $dattindakans
 */
abstract class BaseDatregister extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'datregister';
	}

	public static function representingColumn() {
		return 'noreg';
	}

	public function rules() {
		return array(
			array('noreg, idmr, tgl, jam_masuk, jenis_tanggungan, poli, dokter, type', 'required'),
			array('idmr, jenis_tanggungan, poli, dokter, type, alasankeluar', 'numerical', 'integerOnly'=>true),
			array('noreg, no_rujuk, ref_rujuk, asuransi, nosjp', 'length', 'max'=>45),
			array('biaya_admin', 'length', 'max'=>10),
			array('tglplg, jamplg', 'safe'),
			array('no_rujuk, ref_rujuk, asuransi, nosjp, biaya_admin, tglplg, jamplg, alasankeluar', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, noreg, idmr, tgl, jam_masuk, jenis_tanggungan, no_rujuk, ref_rujuk, asuransi, poli, nosjp, biaya_admin, dokter, type, tglplg, jamplg, alasankeluar', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'jenisTanggungan0' => array(self::BELONGS_TO, 'Reftanggungan', 'jenis_tanggungan'),
			'idmr0' => array(self::BELONGS_TO, 'Mspasien2', 'idmr'),
			'poli0' => array(self::BELONGS_TO, 'Refpoli', 'poli'),
			'dokter0' => array(self::BELONGS_TO, 'Refdokter', 'dokter'),
			'type0' => array(self::BELONGS_TO, 'Reftype', 'type'),
			'alasankeluar0' => array(self::BELONGS_TO, 'Refkeluar', 'alasankeluar'),
			'dattindakans' => array(self::HAS_MANY, 'Dattindakan', 'idreg'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'noreg' => Yii::t('app', 'Noreg'),
			'idmr' => Yii::t('app', 'Idmr'),
			'tgl' => Yii::t('app', 'Tgl'),
			'jam_masuk' => Yii::t('app', 'Jam Masuk'),
			'jenis_tanggungan' => Yii::t('app', 'Jenis Tanggungan'),
			'no_rujuk' => Yii::t('app', 'No Rujuk'),
			'ref_rujuk' => Yii::t('app', 'Ref Rujuk'),
			'asuransi' => Yii::t('app', 'Asuransi'),
			'poli' => Yii::t('app', 'Poli'),
			'nosjp' => Yii::t('app', 'Nosjp'),
			'biaya_admin' => Yii::t('app', 'Biaya Admin'),
			'dokter' => Yii::t('app', 'Dokter'),
			'type' => Yii::t('app', 'Type'),
			'tglplg' => Yii::t('app', 'Tglplg'),
			'jamplg' => Yii::t('app', 'Jamplg'),
			'alasankeluar' => Yii::t('app', 'Alasankeluar'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('noreg', $this->noreg, true);
		$criteria->compare('idmr', $this->idmr);
		$criteria->compare('tgl', $this->tgl, true);
		$criteria->compare('jam_masuk', $this->jam_masuk, true);
		$criteria->compare('jenis_tanggungan', $this->jenis_tanggungan);
		$criteria->compare('no_rujuk', $this->no_rujuk, true);
		$criteria->compare('ref_rujuk', $this->ref_rujuk, true);
		$criteria->compare('asuransi', $this->asuransi, true);
		$criteria->compare('poli', $this->poli);
		$criteria->compare('nosjp', $this->nosjp, true);
		$criteria->compare('biaya_admin', $this->biaya_admin, true);
		$criteria->compare('dokter', $this->dokter);
		$criteria->compare('type', $this->type);
		$criteria->compare('tglplg', $this->tglplg, true);
		$criteria->compare('jamplg', $this->jamplg, true);
		$criteria->compare('alasankeluar', $this->alasankeluar);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
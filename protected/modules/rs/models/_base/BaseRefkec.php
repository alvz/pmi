<?php

/**
 * This is the model base class for the table "refkec".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Refkec".
 *
 * Columns in table "refkec" available as properties of the model,
 * followed by relations of table "refkec" available as properties of the model.
 *
 * @property integer $id
 * @property string $KDPROP
 * @property string $KDKEC
 * @property integer $iddati
 * @property string $KDDATI2
 * @property string $NMKEC
 *
 * @property Mspasien2[] $mspasien2s
 * @property Refdati $iddati0
 */
abstract class BaseRefkec extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'refkec';
	}

	public static function representingColumn() {
		return 'KDPROP';
	}

	public function rules() {
		return array(
			array('KDPROP, KDKEC, iddati, KDDATI2, NMKEC', 'required'),
			array('iddati', 'numerical', 'integerOnly'=>true),
			array('KDPROP', 'length', 'max'=>2),
			array('KDKEC, KDDATI2', 'length', 'max'=>4),
			array('NMKEC', 'length', 'max'=>25),
			array('id, KDPROP, KDKEC, iddati, KDDATI2, NMKEC', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'mspasien2s' => array(self::HAS_MANY, 'Mspasien2', 'kec'),
			'iddati0' => array(self::BELONGS_TO, 'Refdati', 'iddati'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'KDPROP' => Yii::t('app', 'Kdprop'),
			'KDKEC' => Yii::t('app', 'Kdkec'),
			'iddati' => Yii::t('app', 'Iddati'),
			'KDDATI2' => Yii::t('app', 'Kddati2'),
			'NMKEC' => Yii::t('app', 'Nmkec'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('KDPROP', $this->KDPROP, true);
		$criteria->compare('KDKEC', $this->KDKEC, true);
		$criteria->compare('iddati', $this->iddati);
		$criteria->compare('KDDATI2', $this->KDDATI2, true);
		$criteria->compare('NMKEC', $this->NMKEC, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
<?php

/**
 * This is the model base class for the table "layanpoli".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Layanpoli".
 *
 * Columns in table "layanpoli" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $noreg
 * @property string $diag
 * @property string $tekanandarahl
 * @property string $tekanandarahh
 * @property string $denyutnadil
 * @property string $denyutnadih
 * @property string $suhu
 * @property string $tb
 * @property string $bb
 * @property string $kesadaran
 * @property string $respirasi
 * @property string $bab
 * @property string $bak
 * @property string $vomitting
 * @property string $ivfd
 * @property integer $diagdokterp
 * @property integer $diagdokters1
 * @property integer $diagdokters2
 * @property integer $diagdokters3
 * @property integer $diagdokters4
 * @property string $cat_khusus
 *
 */
abstract class BaseLayanpoli extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'layanpoli';
	}

	public static function representingColumn() {
		return 'diag';
	}

	public function rules() {
		return array(
			array('id, noreg, diag', 'required'),
			array('id, noreg, diagdokterp, diagdokters1, diagdokters2, diagdokters3, diagdokters4', 'numerical', 'integerOnly'=>true),
			array('diag', 'length', 'max'=>12),
			array('tekanandarahl, tekanandarahh', 'length', 'max'=>3),
			array('denyutnadil, denyutnadih', 'length', 'max'=>10),
			array('suhu, tb, bb, kesadaran, respirasi, bab, bak, vomitting, ivfd', 'length', 'max'=>45),
			array('cat_khusus', 'safe'),
			array('tekanandarahl, tekanandarahh, denyutnadil, denyutnadih, suhu, tb, bb, kesadaran, respirasi, bab, bak, vomitting, ivfd, diagdokterp, diagdokters1, diagdokters2, diagdokters3, diagdokters4, cat_khusus', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, noreg, diag, tekanandarahl, tekanandarahh, denyutnadil, denyutnadih, suhu, tb, bb, kesadaran, respirasi, bab, bak, vomitting, ivfd, diagdokterp, diagdokters1, diagdokters2, diagdokters3, diagdokters4, cat_khusus', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'noreg' => Yii::t('app', 'Noreg'),
			'diag' => Yii::t('app', 'Diag'),
			'tekanandarahl' => Yii::t('app', 'Tekanandarahl'),
			'tekanandarahh' => Yii::t('app', 'Tekanandarahh'),
			'denyutnadil' => Yii::t('app', 'Denyutnadil'),
			'denyutnadih' => Yii::t('app', 'Denyutnadih'),
			'suhu' => Yii::t('app', 'Suhu'),
			'tb' => Yii::t('app', 'Tb'),
			'bb' => Yii::t('app', 'Bb'),
			'kesadaran' => Yii::t('app', 'Kesadaran'),
			'respirasi' => Yii::t('app', 'Respirasi'),
			'bab' => Yii::t('app', 'Bab'),
			'bak' => Yii::t('app', 'Bak'),
			'vomitting' => Yii::t('app', 'Vomitting'),
			'ivfd' => Yii::t('app', 'Ivfd'),
			'diagdokterp' => Yii::t('app', 'Diagdokterp'),
			'diagdokters1' => Yii::t('app', 'Diagdokters1'),
			'diagdokters2' => Yii::t('app', 'Diagdokters2'),
			'diagdokters3' => Yii::t('app', 'Diagdokters3'),
			'diagdokters4' => Yii::t('app', 'Diagdokters4'),
			'cat_khusus' => Yii::t('app', 'Cat Khusus'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('noreg', $this->noreg);
		$criteria->compare('diag', $this->diag, true);
		$criteria->compare('tekanandarahl', $this->tekanandarahl, true);
		$criteria->compare('tekanandarahh', $this->tekanandarahh, true);
		$criteria->compare('denyutnadil', $this->denyutnadil, true);
		$criteria->compare('denyutnadih', $this->denyutnadih, true);
		$criteria->compare('suhu', $this->suhu, true);
		$criteria->compare('tb', $this->tb, true);
		$criteria->compare('bb', $this->bb, true);
		$criteria->compare('kesadaran', $this->kesadaran, true);
		$criteria->compare('respirasi', $this->respirasi, true);
		$criteria->compare('bab', $this->bab, true);
		$criteria->compare('bak', $this->bak, true);
		$criteria->compare('vomitting', $this->vomitting, true);
		$criteria->compare('ivfd', $this->ivfd, true);
		$criteria->compare('diagdokterp', $this->diagdokterp);
		$criteria->compare('diagdokters1', $this->diagdokters1);
		$criteria->compare('diagdokters2', $this->diagdokters2);
		$criteria->compare('diagdokters3', $this->diagdokters3);
		$criteria->compare('diagdokters4', $this->diagdokters4);
		$criteria->compare('cat_khusus', $this->cat_khusus, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
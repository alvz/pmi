<?php

/**
 * This is the model base class for the table "deposit".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Deposit".
 *
 * Columns in table "deposit" available as properties of the model,
 * followed by relations of table "deposit" available as properties of the model.
 *
 * @property integer $id
 * @property string $tgldp
 * @property string $nokwitansi
 * @property string $nilai
 * @property integer $via
 * @property string $bank
 * @property string $nokartu
 * @property string $pcharge
 * @property string $rpcharge
 * @property string $jumlah
 * @property integer $pasien
 * @property string $uraian1
 * @property string $uraian2
 * @property string $atasnama
 * @property string $penerima
 *
 * @property Mspasien2 $pasien0
 * @property Refpembayaran $via0
 */
abstract class BaseDeposit extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'deposit';
	}

	public static function representingColumn() {
		return 'tgldp';
	}

	public function rules() {
		return array(
			array('tgldp, nokwitansi, nilai, via, pasien, uraian1, penerima', 'required'),
			array('via, pasien', 'numerical', 'integerOnly'=>true),
			array('nokwitansi, bank, nokartu, uraian1, uraian2, atasnama, penerima', 'length', 'max'=>45),
			array('nilai, pcharge, rpcharge, jumlah', 'length', 'max'=>10),
			array('bank, nokartu, pcharge, rpcharge, jumlah, uraian2, atasnama', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, tgldp, nokwitansi, nilai, via, bank, nokartu, pcharge, rpcharge, jumlah, pasien, uraian1, uraian2, atasnama, penerima', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'pasien0' => array(self::BELONGS_TO, 'Mspasien2', 'pasien'),
			'via0' => array(self::BELONGS_TO, 'Refpembayaran', 'via'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'tgldp' => Yii::t('app', 'Tgldp'),
			'nokwitansi' => Yii::t('app', 'Nokwitansi'),
			'nilai' => Yii::t('app', 'Nilai'),
			'via' => Yii::t('app', 'Via'),
			'bank' => Yii::t('app', 'Bank'),
			'nokartu' => Yii::t('app', 'Nokartu'),
			'pcharge' => Yii::t('app', 'Pcharge'),
			'rpcharge' => Yii::t('app', 'Rpcharge'),
			'jumlah' => Yii::t('app', 'Jumlah'),
			'pasien' => Yii::t('app', 'Pasien'),
			'uraian1' => Yii::t('app', 'Uraian1'),
			'uraian2' => Yii::t('app', 'Uraian2'),
			'atasnama' => Yii::t('app', 'Atasnama'),
			'penerima' => Yii::t('app', 'Penerima'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('tgldp', $this->tgldp, true);
		$criteria->compare('nokwitansi', $this->nokwitansi, true);
		$criteria->compare('nilai', $this->nilai, true);
		$criteria->compare('via', $this->via);
		$criteria->compare('bank', $this->bank, true);
		$criteria->compare('nokartu', $this->nokartu, true);
		$criteria->compare('pcharge', $this->pcharge, true);
		$criteria->compare('rpcharge', $this->rpcharge, true);
		$criteria->compare('jumlah', $this->jumlah, true);
		$criteria->compare('pasien', $this->pasien);
		$criteria->compare('uraian1', $this->uraian1, true);
		$criteria->compare('uraian2', $this->uraian2, true);
		$criteria->compare('atasnama', $this->atasnama, true);
		$criteria->compare('penerima', $this->penerima, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
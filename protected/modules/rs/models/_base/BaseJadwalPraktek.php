<?php

/**
 * This is the model base class for the table "jadwal_praktek".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "JadwalPraktek".
 *
 * Columns in table "jadwal_praktek" available as properties of the model,
 * followed by relations of table "jadwal_praktek" available as properties of the model.
 *
 * @property integer $id
 * @property integer $iddokter
 * @property string $hari
 * @property string $dari_jam
 * @property string $sampai_jam
 * @property string $psm
 * @property integer $idpoli
 *
 * @property Refpoli $idpoli0
 * @property Refdokter $iddokter0
 */
abstract class BaseJadwalPraktek extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'jadwal_praktek';
	}

	public static function representingColumn() {
		return 'hari';
	}

	public function rules() {
		return array(
			array('iddokter', 'required'),
			array('iddokter, idpoli', 'numerical', 'integerOnly'=>true),
			array('hari', 'length', 'max'=>45),
			array('psm', 'length', 'max'=>1),
			array('dari_jam, sampai_jam', 'safe'),
			array('hari, dari_jam, sampai_jam, psm, idpoli', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, iddokter, hari, dari_jam, sampai_jam, psm, idpoli', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idpoli0' => array(self::BELONGS_TO, 'Refpoli', 'idpoli'),
			'iddokter0' => array(self::BELONGS_TO, 'Refdokter', 'iddokter'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'iddokter' => Yii::t('app', 'Iddokter'),
			'hari' => Yii::t('app', 'Hari'),
			'dari_jam' => Yii::t('app', 'Dari Jam'),
			'sampai_jam' => Yii::t('app', 'Sampai Jam'),
			'psm' => Yii::t('app', 'Psm'),
			'idpoli' => Yii::t('app', 'Idpoli'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('iddokter', $this->iddokter);
		$criteria->compare('hari', $this->hari, true);
		$criteria->compare('dari_jam', $this->dari_jam, true);
		$criteria->compare('sampai_jam', $this->sampai_jam, true);
		$criteria->compare('psm', $this->psm, true);
		$criteria->compare('idpoli', $this->idpoli);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
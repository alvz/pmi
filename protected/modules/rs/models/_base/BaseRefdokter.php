<?php

/**
 * This is the model base class for the table "refdokter".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Refdokter".
 *
 * Columns in table "refdokter" available as properties of the model,
 * followed by relations of table "refdokter" available as properties of the model.
 *
 * @property integer $id
 * @property string $dokter
 * @property string $spesialis
 * @property string $alamat
 * @property string $nohp
 *
 * @property Datregister[] $datregisters
 * @property JadwalPraktek[] $jadwalPrakteks
 */
abstract class BaseRefdokter extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'refdokter';
	}

	public static function representingColumn() {
		return 'dokter';
	}

	public function rules() {
		return array(
			array('dokter', 'required'),
			array('dokter, spesialis, alamat', 'length', 'max'=>45),
			array('nohp', 'length', 'max'=>15),
			array('spesialis, alamat, nohp', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, dokter, spesialis, alamat, nohp', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'datregisters' => array(self::HAS_MANY, 'Datregister', 'dokter'),
			'jadwalPrakteks' => array(self::HAS_MANY, 'JadwalPraktek', 'iddokter'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'dokter' => Yii::t('app', 'Dokter'),
			'spesialis' => Yii::t('app', 'Spesialis'),
			'alamat' => Yii::t('app', 'Alamat'),
			'nohp' => Yii::t('app', 'Nohp'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('dokter', $this->dokter, true);
		$criteria->compare('spesialis', $this->spesialis, true);
		$criteria->compare('alamat', $this->alamat, true);
		$criteria->compare('nohp', $this->nohp, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}